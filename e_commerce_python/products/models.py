from django.db import models
from django.utils import timezone
from users.models import User

# Create your models here.
class Category(models.Model):
    parent_id = models.IntegerField(null=True, default=0)
    level = models.IntegerField(default=0)
    name = models.CharField(max_length=100)
    order_level = models.IntegerField(default=0)
    commission_rate = models.FloatField(default=0.00)
    banner = models.CharField(max_length=255, null=True, blank=True)
    icon = models.CharField(max_length=255, null=True, blank=True)
    cover_image = models.CharField(max_length=255, null=True, blank=True)
    featured = models.IntegerField(default=0)
    top = models.IntegerField(default=0)
    digital = models.IntegerField(default=0)
    slug = models.SlugField(null=True, blank=True)
    meta_title = models.CharField(max_length=255, null=True, blank=True)
    description = models.TextField(null=True, blank=True)
    created_at = models.DateTimeField(default=timezone.now)
    updated_at = models.DateTimeField(auto_now=True)


    def _str__(self):
        return self.name

class Product(models.Model):
    name = models.CharField(max_length=255)
    added_by = models.CharField(default='admin', max_length=255)
    user_id = models.ForeignKey(User, on_delete=models.CASCADE)  # Assuming User is a valid Django user model
    category_id = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True)
    # brand_id = models.ForeignKey('Brand', on_delete=models.SET_NULL, null=True, blank=True)
    photos = models.CharField(max_length=255, null=True, blank=True)
    thumbnail_img = models.CharField(max_length=255, null=True, blank=True)
    video_provider = models.CharField(max_length=255, null=True, blank=True)
    video_link = models.CharField(max_length=255, null=True, blank=True)
    tags = models.CharField(max_length=255, null=True, blank=True)
    description = models.TextField(null=True, blank=True)
    unit_price = models.DecimalField(max_digits=8, decimal_places=2)
    purchase_price = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True)
    variant_product = models.IntegerField(default=0)
    attributes = models.CharField(default='[]', max_length=255)
    choice_options = models.TextField(null=True, blank=True)
    colors = models.TextField(null=True, blank=True)
    variations = models.TextField(null=True, blank=True)
    todays_deals = models.IntegerField(default=0)
    published = models.IntegerField(default=1)
    approved = models.SmallIntegerField(default=1)
    stock_visibility_state = models.CharField(default='quantity', max_length=255)
    cash_on_deliver = models.SmallIntegerField(default=0)
    featured = models.IntegerField(default=0)
    seller_featured = models.IntegerField(default=0)
    current_stock = models.IntegerField(default=0)
    unit = models.CharField(max_length=255, null=True, blank=True)
    weight = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)
    min_quantity = models.IntegerField(default=1)
    low_stock_quantity = models.IntegerField(null=True, blank=True)
    discount = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True)
    discount_type = models.CharField(max_length=255, null=True, blank=True)
    discount_start_date = models.DateTimeField(null=True, blank=True)
    discount_end_date = models.DateTimeField(null=True, blank=True)
    starting_bid = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True, default=0.00)
    auction_start_date = models.DateTimeField(null=True, blank=True)
    auction_end_date = models.DateTimeField(null=True, blank=True)
    tax = models.DecimalField(null=True, blank=True, max_digits=8, decimal_places=2)
    tax_type = models.CharField(max_length=255, null=True, blank=True)
    shipping_type = models.CharField(max_length=255, default='flat_rate', null=True, blank=True)
    shipping_cost = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)
    is_quantity_multiplied = models.SmallIntegerField(default=0)
    est_shipping_days = models.IntegerField(null=True, blank=True)
    num_of_sale = models.IntegerField(default=0)
    meta_title = models.TextField(null=True, blank=True)
    meta_description = models.TextField(null=True, blank=True)
    meta_img = models.CharField(max_length=255, null=True, blank=True)
    pdf = models.CharField(max_length=255, null=True, blank=True)
    slug = models.TextField()
    earn_point = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)
    refundable = models.IntegerField(default=0)
    rating = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)
    barcode = models.CharField(max_length=255, null=True, blank=True)
    digital = models.IntegerField(default=0)
    auction_product = models.IntegerField(default=0)
    file_name = models.CharField(max_length=255, null=True, blank=True)
    file_path = models.CharField(max_length=255, null=True, blank=True)
    external_link = models.CharField(max_length=255, null=True, blank=True)
    external_link_button = models.CharField(max_length=255, default='Buy Now', null=True, blank=True)
    whole_sale_product = models.IntegerField(default=0)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.name
